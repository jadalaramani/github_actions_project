name: CI-CD Pipeline with ArgoCD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      IMAGE_NAME: ramanijadala/webapp

    steps:
      # Checkout
      - name: Checkout Code
        uses: actions/checkout@v4

      # Java setup
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'


      # Maven Build
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # DockerHub Login
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.run_number }}

      # Update Deployment Manifest
      - name: Update Deployment Manifest
        run: |
          sed -i "s|${IMAGE_NAME}:.*|${IMAGE_NAME}:${GITHUB_RUN_NUMBER}|g" deploymentfiles/deployment.yml

      # Commit Manifest Update
      - name: Commit and Push Deployment File
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update deployment image to version ${{ github.run_number }}"
          branch: main

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Install ArgoCD CLI
      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      # Sync with ArgoCD
      - name: Trigger ArgoCD Sync
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} --username admin --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
          argocd app sync my-app
